{"version":3,"sources":["firebase/fbase.js","routes/profile.js","components/AuthForm.js","routes/Auth.js","components/tweet.js","components/twitFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","userObj","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyTwits","a","collection","where","uid","orderBy","get","twit","console","log","docs","map","doc","data","onSubmit","event","preventDefault","updateProfile","useEffect","type","placeholder","onChange","target","value","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","alert","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Twit","twitObj","isOwner","editing","setEditing","text","newTwit","setNewTwit","onDeleteClick","window","confirm","id","delete","refFromURL","fileUrl","toggleEditing","update","src","alt","width","height","TwitFactory","setTwit","file","setFile","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","tweet","createAt","Date","now","creatorId","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishEvent","currentTarget","result","readAsDataURL","Home","twits","setTwits","onSnapshot","snapshot","twitArray","item","Navigation","to","TwitRouter","isLoggedIn","exact","path","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18011f74.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCI6Fh_C9ANCnxOBCnMVsTbZbNymshLVQ0\",\r\n  authDomain: \"clone-twitter-d5fe7.firebaseapp.com\",\r\n  projectId: \"clone-twitter-d5fe7\",\r\n  storageBucket: \"clone-twitter-d5fe7.appspot.com\",\r\n  messagingSenderId: \"922616890112\",\r\n  appId: \"1:922616890112:web:dc765c90578c963de629e5\",\r\n  measurementId: \"G-YP0VYG8P35\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService } from \"firebase/fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  let history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyTwits = async () => {\r\n    const twit = await dbService\r\n      .collection(\"twits\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createAt\")\r\n      .get();\r\n    console.log(twit.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n    setNewDisplayName(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setNewDisplayName(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    getMyTwits();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"display Name\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" placeholder=\"update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"firebase/fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let data;\r\n    try {\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Login\"} />\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Login\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService } from \"firebase/fbase\";\r\nimport React from \"react\";\r\nimport { firebaseInstance } from \"firebase/fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button name=\"google\" onClick={onSocialClick}>\r\n          Continue with Google\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick}>\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"firebase/fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Twit = ({ twitObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTwit, setNewTwit] = useState(twitObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure???\");\r\n    if (ok) {\r\n      await dbService.doc(`twits/${twitObj.id}`).delete();\r\n      await storageService.refFromURL(twitObj.fileUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChange = (event) => {\r\n    setNewTwit(event.target.value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`twits/${twitObj.id}`).update({\r\n      text: newTwit,\r\n    });\r\n    toggleEditing();\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your twit\"\r\n              value={newTwit}\r\n              onChange={onChange}\r\n              required\r\n            />\r\n\r\n            <input type=\"submit\" value=\"edit\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{twitObj.text}</h4>\r\n          {twitObj.fileUrl && (\r\n            <img src={twitObj.fileUrl} alt=\"\" width=\"70px\" height=\"70px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Twit</button>\r\n              <button onClick={toggleEditing}>Edit Twit</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Twit;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"firebase/fbase\";\r\n\r\nconst TwitFactory = ({ userObj }) => {\r\n  const [twit, setTwit] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let fileUrl = \"\";\r\n    if (file !== \"\") {\r\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await fileRef.putString(file, \"data_url\");\r\n      fileUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const tweet = {\r\n      text: twit,\r\n      createAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      fileUrl,\r\n    };\r\n    await dbService.collection(\"twits\").add(tweet);\r\n    setTwit(\"\");\r\n    setFile(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setTwit(event.target.value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishEvent) => {\r\n      setFile(finishEvent.currentTarget.result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearImage = () => {\r\n    setFile(null);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"what's on your mind\"\r\n        maxLength={140}\r\n        value={twit}\r\n        onChange={onChange}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"twit\" />\r\n      {file && (\r\n        <div>\r\n          <img src={file} alt=\"\" width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearImage}>Clear image</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TwitFactory;\r\n","import Twit from \"components/tweet\";\r\nimport { dbService } from \"firebase/fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TwitFactory from \"components/twitFactory\";\r\nconst Home = ({ userObj }) => {\r\n  const [twits, setTwits] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"twits\").onSnapshot((snapshot) => {\r\n      const twitArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setTwits(twitArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TwitFactory userObj={userObj} />\r\n      <div>\r\n        {twits.map((item) => (\r\n          <Twit\r\n            key={item.id}\r\n            twitObj={item}\r\n            isOwner={item.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst TwitRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default TwitRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport TwitRouter from \"components/Router\";\nimport { authService } from \"firebase/fbase\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser); //유저의 로그인 여부 확인!\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <div>\n      {init ? (\n        <TwitRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"initializing....\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}